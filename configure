#! /usr/bin/env bash
#
# This file is part of Xvisor Build Environment.
# Copyright (C) 2015 Institut de Recherche Technologique SystemX
# Copyright (C) 2015 OpenWide
# All rights reserved.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this Xvisor Build Environment. If not, see
# <http://www.gnu.org/licenses/>.
#
# @file configure
#



# The called program name, i.e. configure with its path
PROGNAME=$0

# Directory where the configure script is
which realpath &>/dev/null
if [ $? -ne 0 ]; then
  CURDIR=$(dirname ${PROGNAME})
else
  CURDIR=$(realpath $(dirname ${PROGNAME}))
fi

# Script directory
SCRIPTDIR=${CURDIR}/scripts

# Make file directory
MAKEDIR=${CURDIR}/make

# Test directory
TESTDIR=${CURDIR}/test

# Configuration file directory
CONFDIR=${CURDIR}/conf

# Build directory, used by this script to write the resulting configuration
# (the next variable)
BUILDDIR=${CURDIR}/build

# Temporary file directory
TMPDIR=/tmp/xvisor_env-$(date "+%Y%m%d-%H%M%S")

# Downloaded archive directory
ARCDIR=${BUILDDIR}/archives

# Build stamp directory
STAMPDIR=${BUILDDIR}/stamps

# The target built rootfs
TARGETDIR=${BUILDDIR}/target

# The host build directory
HOSTDIR=${BUILDDIR}/host

# The host build directory
TFTPDIR=/srv/tftp

# The resulting configuration
CONF=${BUILDDIR}/.env_config

# Does the board require busybox, enabled by default
BOARD_BUSYBOX=1

# Does the board will run under Qemu, disabled by default
BOARD_QEMU=0

# Verbosity option, that can be modify through the program arguments
VERBOSE=0

if [ -e "local.conf" ]; then
    printf "You have a local.conf file so we source it, but use it at your own risk !!\n"
    source local.conf
fi

# Option functions used in this script
source ${SCRIPTDIR}/options.sh
source ${SCRIPTDIR}/package.sh
source ${SCRIPTDIR}/config.sh

board_list() {
    RET=$1

    if [ -z "${RET}" ]; then
	RET=1
    fi

    if [ ${RET} -eq 1 ]; then
	OUTPUT=/dev/stderr
    else
	OUTPUT=/dev/stdout
    fi

    printf "${BOLD}Available board support:${NORMAL}\n"
    printf "  - vexpress-a9:\tARM Versatile Express A9\n"
    printf "\t\t\tThe reference platform to emulate the hypervisor.\n"
    printf "  - sabrelite:\t\tARM Sabrelite platform\n"
    printf "\t\t\tThe real board to run the hypervisor on.\n"
    printf "  - nitrogen6x:\t\tBoundary Devices Nitrogen6x platform\n"
    printf "\t\t\tSimilar to Sabrelite.\n"
    printf "  - realview-pb-a8:\tRealview Platform Base Board\n"
    printf "\t\t\tAnother reference platform to emulate the hypervisor.\n"
    printf "  - realview-eb-mpcore:\tRealview Platform Base Board\n"
    printf "\t\t\tAnother reference platform to emulate the hypervisor.\n"
    printf "  - bcm2835-raspi:\t\tThe Famous Raspberry PI B(+) platform\n"
    printf "\t\t\tCan run realview-eb-mpcore guests.\n"

    exit ${RET}
}

pre_option_check
option_parse $*
option_board_validate
option_board
packages_check
config_write
